<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="3bdceca6-f60e-4c62-b858-78be44f89aa8" name="Changes" comment="feat(admin-service): add implementation of admin-service&#10;- Configured Spring Security with role-based access control for admin functionality.&#10;- Integrated Feign clients for communication with other microservices (auth-service, task-service, contest-service).">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/api-gateway/src/main/java/com/algoforge/apigateway/config/SecurityConfig.java" beforeDir="false" afterPath="$PROJECT_DIR$/api-gateway/src/main/java/com/algoforge/apigateway/config/SecurityConfig.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/auth-service/src/main/java/com/algoforge/authservice/config/SecurityConfig.java" beforeDir="false" afterPath="$PROJECT_DIR$/auth-service/src/main/java/com/algoforge/authservice/config/SecurityConfig.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/auth-service/src/main/java/com/algoforge/authservice/config/WebConfig.java" beforeDir="false" afterPath="$PROJECT_DIR$/auth-service/src/main/java/com/algoforge/authservice/config/WebConfig.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/contest-service/src/main/java/com/algoforge/contestservice/config/SecurityConfig.java" beforeDir="false" afterPath="$PROJECT_DIR$/contest-service/src/main/java/com/algoforge/contestservice/config/SecurityConfig.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/task-service/src/main/java/com/algoforge/taskservice/config/SecurityConfig.java" beforeDir="false" afterPath="$PROJECT_DIR$/task-service/src/main/java/com/algoforge/taskservice/config/SecurityConfig.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/task-service/src/main/java/com/algoforge/taskservice/controller/TaskController.java" beforeDir="false" afterPath="$PROJECT_DIR$/task-service/src/main/java/com/algoforge/taskservice/controller/TaskController.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/task-service/src/main/java/com/algoforge/taskservice/model/Task.java" beforeDir="false" afterPath="$PROJECT_DIR$/task-service/src/main/java/com/algoforge/taskservice/model/Task.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/task-service/src/main/java/com/algoforge/taskservice/repository/TaskRepository.java" beforeDir="false" afterPath="$PROJECT_DIR$/task-service/src/main/java/com/algoforge/taskservice/repository/TaskRepository.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/task-service/src/main/java/com/algoforge/taskservice/service/TaskService.java" beforeDir="false" afterPath="$PROJECT_DIR$/task-service/src/main/java/com/algoforge/taskservice/service/TaskService.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
    <projectState path="$PROJECT_DIR$/admin-service">
      <ProjectState />
    </projectState>
    <projectState path="$PROJECT_DIR$/apigateway">
      <ProjectState />
    </projectState>
    <projectState path="$PROJECT_DIR$/auth-service">
      <ProjectState />
    </projectState>
    <projectState path="$PROJECT_DIR$/contest-service">
      <ProjectState />
    </projectState>
    <projectState path="$PROJECT_DIR$/task-service">
      <ProjectState />
    </projectState>
    <projectState path="$PROJECT_DIR$/test-runner-service">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="GRADLE">
      <state>
        <task path="$PROJECT_DIR$/apigateway">
          <activation />
        </task>
        <projects_view>
          <tree_state>
            <expand>
              <path>
                <item name="" type="6a2764b6:ExternalProjectsStructure$RootNode" />
                <item name="admin-service" type="f1a62948:ProjectNode" />
              </path>
            </expand>
            <select />
          </tree_state>
        </projects_view>
      </state>
    </system>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Interface" />
        <option value="package-info" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;k1rtar&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/k1rtar/is-course-work.git&quot;,
    &quot;accountId&quot;: &quot;2a5db967-38c3-49ef-a136-af41f7409462&quot;
  }
}</component>
  <component name="KubernetesApiPersistence">{}</component>
  <component name="KubernetesApiProvider">{
  &quot;isMigrated&quot;: true
}</component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 8
}</component>
  <component name="ProjectId" id="2r8Msu71BJ7wGjNFwciXZDiryjO" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;Downloaded.Files.Path.Enabled&quot;: &quot;false&quot;,
    &quot;Repository.Attach.Annotations&quot;: &quot;false&quot;,
    &quot;Repository.Attach.JavaDocs&quot;: &quot;false&quot;,
    &quot;Repository.Attach.Sources&quot;: &quot;false&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
    &quot;jdk.selected.JAVA_MODULE&quot;: &quot;21&quot;,
    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;D:/jetbrains/is-course-work/common/src/main/java/com/algoforge/common/auth/JwtWithAuthFilter.java&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,
    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,
    &quot;run.configurations.included.in.services&quot;: &quot;true&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;vcs.Git&quot;,
    &quot;two.files.diff.last.used.file&quot;: &quot;D:/jetbrains/is-course-work/common/src/main/java/com/algoforge/common/auth/JwtWithAuthFilter.java&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="D:\jetbrains\is-course-work" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="configurationTypes">
      <set>
        <option value="MicronautRunConfigurationType" />
        <option value="QuarkusRunConfigurationType" />
        <option value="SpringBootApplicationConfigurationType" />
      </set>
    </option>
  </component>
  <component name="RunManager" selected="Spring Boot.ApigatewayApplication">
    <configuration name="AdminServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="admin-service.main" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.algoforge.taskservice.AdminServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ApigatewayApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="apigateway.main" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.algoforge.apigateway.ApigatewayApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="AuthServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="auth-service.main" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.algoforge.authservice.AuthServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ContestServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="contest-service.main" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.algoforge.contestservice.ContestServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="TaskServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="task-service_main" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.algoforge.taskservice.TaskServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="TestRunnerServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="test-runner-service.main" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.algoforge.testrunnerservice.TestRunnerServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-jdk-9f38398b9061-39b83d9b5494-intellij.indexing.shared.core-IU-241.19072.14" />
        <option value="bundled-js-predefined-1d06a55b98c1-0b3e54e931b4-JavaScript-IU-241.19072.14" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="3bdceca6-f60e-4c62-b858-78be44f89aa8" name="Changes" comment="" />
      <created>1735936459774</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1735936459774</updated>
      <workItem from="1735936461041" duration="9335000" />
      <workItem from="1736012569071" duration="3610000" />
      <workItem from="1736020447059" duration="2574000" />
      <workItem from="1736256768076" duration="17000" />
      <workItem from="1736276611930" duration="9000" />
      <workItem from="1736362516194" duration="28743000" />
      <workItem from="1736451832781" duration="147000" />
      <workItem from="1736493328830" duration="7000" />
      <workItem from="1736515017840" duration="1202000" />
      <workItem from="1736530654225" duration="1000" />
      <workItem from="1736597169884" duration="1000" />
      <workItem from="1736609545332" duration="10059000" />
      <workItem from="1736669480188" duration="45465000" />
      <workItem from="1736777140843" duration="4000" />
      <workItem from="1736777424607" duration="1454000" />
      <workItem from="1736783216256" duration="1000" />
      <workItem from="1736783972948" duration="2000" />
      <workItem from="1736784350328" duration="2325000" />
      <workItem from="1736792949072" duration="21692000" />
    </task>
    <task id="LOCAL-00001" summary="first commit">
      <option name="closed" value="true" />
      <created>1735937674088</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1735937674088</updated>
    </task>
    <task id="LOCAL-00002" summary="feat(api-gateway): add API gateway and stubs for auth-service, task-service, and test-runner-service">
      <option name="closed" value="true" />
      <created>1736014354076</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1736014354076</updated>
    </task>
    <task id="LOCAL-00003" summary="feat(auth-service): add JsonProperty annotation to isBlocked and isDeleted fields in AlgoUser&#10;&#10;These changes ensure proper serialization and deserialization of the fields&#10;during JSON processing, allowing their values to be correctly read and written.">
      <option name="closed" value="true" />
      <created>1736450176287</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1736450176288</updated>
    </task>
    <task id="LOCAL-00004" summary="feat(task-service): add Task Service&#10;&#10;- Add Task, Category, TestCase, and other domain entities&#10;- Implement CRUD operations, repositories, services, and controllers&#10;- Configure Spring Security with JWT for authentication&#10;- Provide Dockerfile and docker-compose setup&#10;- Include integration with PostgreSQL">
      <option name="closed" value="true" />
      <created>1736450324956</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1736450324956</updated>
    </task>
    <task id="LOCAL-00005" summary="feat(contest-service): implement contest management">
      <option name="closed" value="true" />
      <created>1736621255878</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1736621255878</updated>
    </task>
    <task id="LOCAL-00006" summary="feat(auth): enhance AlgoUser model with additional properties and improvements&#10;&#10;- Configured the profilePhoto field to use the bytea type for binary storage.">
      <option name="closed" value="true" />
      <created>1736772653502</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1736772653502</updated>
    </task>
    <task id="LOCAL-00007" summary="feat(admin-service): add implementation of admin-service&#10;- Configured Spring Security with role-based access control for admin functionality.&#10;- Integrated Feign clients for communication with other microservices (auth-service, task-service, contest-service).">
      <option name="closed" value="true" />
      <created>1736772886723</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1736772886723</updated>
    </task>
    <option name="localTasksCounter" value="8" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="origin/master" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="first commit" />
    <MESSAGE value="feat(api-gateway): add API gateway and stubs for auth-service, task-service, and test-runner-service" />
    <MESSAGE value="feat(auth-service): add JsonProperty annotation to isBlocked and isDeleted fields in AlgoUser&#10;&#10;These changes ensure proper serialization and deserialization of the fields&#10;during JSON processing, allowing their values to be correctly read and written." />
    <MESSAGE value="feat(task-service): add Task Service&#10;&#10;- Add Task, Category, TestCase, and other domain entities&#10;- Implement CRUD operations, repositories, services, and controllers&#10;- Configure Spring Security with JWT for authentication&#10;- Provide Dockerfile and docker-compose setup&#10;- Include integration with PostgreSQL" />
    <MESSAGE value="feat(contest-service): implement contest management" />
    <MESSAGE value="feat(auth): enhance AlgoUser model with additional properties and improvements&#10;&#10;- Configured the profilePhoto field to use the bytea type for binary storage." />
    <MESSAGE value="feat(admin-service): add implementation of admin-service&#10;- Configured Spring Security with role-based access control for admin functionality.&#10;- Integrated Feign clients for communication with other microservices (auth-service, task-service, contest-service)." />
    <option name="LAST_COMMIT_MESSAGE" value="feat(admin-service): add implementation of admin-service&#10;- Configured Spring Security with role-based access control for admin functionality.&#10;- Integrated Feign clients for communication with other microservices (auth-service, task-service, contest-service)." />
  </component>
</project>